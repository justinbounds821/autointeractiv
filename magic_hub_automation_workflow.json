{
  "name": "Magic Hub Salon - Complete Automation Workflow",
  "nodes": [
    {
      "parameters": {
        "path": "magic-hub-booking-upload",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "01-webhook-booking-upload",
      "name": "Webhook - Booking Upload",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        180,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.status }}",
              "rightValue": "new",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "leftValue": "={{ $json.status }}",
              "rightValue": "pending",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        }
      },
      "id": "02-filter-new-bookings",
      "name": "Filter New Bookings",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        380,
        300
      ]
    },
    {
      "parameters": {
        "url": "https://waba.360dialog.io/v1/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "D360-API-KEY",
              "value": "={{ $credentials.whatsapp360dialog.apiKey }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "to",
              "value": "={{ $json.phone }}"
            },
            {
              "name": "type",
              "value": "text"
            },
            {
              "name": "text",
              "value": "{\"body\": \"Salut {{ $json.firstname }}! Ai rezervare la Magic Hub {{ $json.location }} pe {{ $json.date }} la {{ $json.time }}. Confirmi cu 1️⃣ Da / 2️⃣ Reprogramez?\"}"
            }
          ]
        },
        "options": {}
      },
      "id": "03-whatsapp-confirmation",
      "name": "WhatsApp Confirmation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        580,
        200
      ]
    },
    {
      "parameters": {
        "fromEmail": "noreply@magichub.ro",
        "toEmail": "={{ $json.email }}",
        "subject": "Confirmare rezervare Magic Hub",
        "emailFormat": "html",
        "message": "<!DOCTYPE html><html><body><h2>Salut {{ $json.firstname }}!</h2><p>Ai rezervare la Magic Hub {{ $json.location }} pe {{ $json.date }} la {{ $json.time }}.</p><p>Te rugăm să confirmi rezervarea răspunzând la acest email cu \"Confirm\" sau \"Reprogramez\".</p><p>Mulțumim!</p></body></html>"
      },
      "id": "04-email-confirmation",
      "name": "Email Confirmation",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2,
      "position": [
        580,
        400
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "{{ $credentials.googleSheets.spreadsheetId }}",
          "mode": "id"
        },
        "sheetName": "Booking_Confirmations",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ $json.firstname }} {{ $json.lastname }}",
            "phone": "={{ $json.phone }}",
            "email": "={{ $json.email }}",
            "booking_date": "={{ $json.date }}",
            "booking_time": "={{ $json.time }}",
            "location": "={{ $json.location }}",
            "whatsapp_sent": "=true",
            "email_sent": "=true",
            "timestamp": "={{ new Date().toISOString() }}",
            "status": "confirmation_sent",
            "response": ""
          }
        },
        "options": {}
      },
      "id": "05-log-confirmations",
      "name": "Log Confirmations",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        780,
        300
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 9 * * *"
            }
          ]
        }
      },
      "id": "06-cron-daily-reminders",
      "name": "Cron - Daily Reminders",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        180,
        600
      ]
    },
    {
      "parameters": {
        "operation": "read",
        "documentId": {
          "__rl": true,
          "value": "{{ $credentials.googleSheets.spreadsheetId }}",
          "mode": "id"
        },
        "sheetName": "Booking_Confirmations",
        "options": {}
      },
      "id": "07-read-bookings",
      "name": "Read Bookings",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        380,
        600
      ]
    },
    {
      "parameters": {
        "jsCode": "const today = new Date();\nconst tomorrow = new Date(today);\ntomorrow.setDate(today.getDate() + 1);\nconst tomorrowDate = tomorrow.toISOString().split('T')[0];\n\nconst filteredBookings = items.filter(item => {\n  const bookingDate = new Date(item.json.booking_date).toISOString().split('T')[0];\n  return bookingDate === tomorrowDate;\n});\n\nreturn filteredBookings;"
      },
      "id": "08-filter-tomorrow-bookings",
      "name": "Filter Tomorrow Bookings",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        600
      ]
    },
    {
      "parameters": {
        "url": "https://waba.360dialog.io/v1/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "D360-API-KEY",
              "value": "={{ $credentials.whatsapp360dialog.apiKey }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "to",
              "value": "={{ $json.phone }}"
            },
            {
              "name": "type",
              "value": "text"
            },
            {
              "name": "text",
              "value": "{\"body\": \"Reminder: Mâine la {{ $json.booking_time }} ai programare la Magic Hub – locația {{ $json.location }}.\"}"
            }
          ]
        },
        "options": {}
      },
      "id": "09-whatsapp-reminder",
      "name": "WhatsApp Reminder",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        780,
        550
      ]
    },
    {
      "parameters": {
        "fromEmail": "noreply@magichub.ro",
        "toEmail": "={{ $json.email }}",
        "subject": "Reminder - Programare Magic Hub mâine",
        "emailFormat": "html",
        "message": "<!DOCTYPE html><html><body><h2>Reminder!</h2><p>Mâine la {{ $json.booking_time }} ai programare la Magic Hub – locația {{ $json.location }}.</p><p>Te așteptăm!</p></body></html>"
      },
      "id": "10-email-reminder",
      "name": "Email Reminder",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2,
      "position": [
        780,
        650
      ]
    },
    {
      "parameters": {
        "path": "whatsapp-webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "11-webhook-whatsapp",
      "name": "Webhook - WhatsApp Messages",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        180,
        900
      ]
    },
    {
      "parameters": {
        "model": "gpt-4",
        "messages": {
          "values": [
            {
              "content": "Analyze this WhatsApp message and extract: location (if mentioned), service (if mentioned), and generate a personalized response. Message: {{ $json.text }}. Client name: {{ $json.name }}. Return JSON format: {\"location\": \"\", \"service\": \"\", \"response\": \"\"}"
            }
          ]
        },
        "options": {}
      },
      "id": "12-ai-message-analysis",
      "name": "AI Message Analysis",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [
        380,
        900
      ]
    },
    {
      "parameters": {
        "url": "https://waba.360dialog.io/v1/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "D360-API-KEY",
              "value": "={{ $credentials.whatsapp360dialog.apiKey }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "to",
              "value": "={{ $json.phone }}"
            },
            {
              "name": "type",
              "value": "text"
            },
            {
              "name": "text",
              "value": "{\"body\": \"{{ JSON.parse($json.response).response }}\"}"
            }
          ]
        },
        "options": {}
      },
      "id": "13-ai-whatsapp-response",
      "name": "AI WhatsApp Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        580,
        900
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "{{ $credentials.googleSheets.spreadsheetId }}",
          "mode": "id"
        },
        "sheetName": "Interactiv_AI",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "client_name": "={{ $json.name }}",
            "phone": "={{ $json.phone }}",
            "message": "={{ $json.text }}",
            "ai_location": "={{ JSON.parse($json.response).location }}",
            "ai_service": "={{ JSON.parse($json.response).service }}",
            "ai_response": "={{ JSON.parse($json.response).response }}",
            "timestamp": "={{ new Date().toISOString() }}"
          }
        },
        "options": {}
      },
      "id": "14-log-ai-interactions",
      "name": "Log AI Interactions",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        780,
        900
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 */2 * * *"
            }
          ]
        }
      },
      "id": "15-cron-followup",
      "name": "Cron - Follow-up Check",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        180,
        1200
      ]
    },
    {
      "parameters": {
        "operation": "read",
        "documentId": {
          "__rl": true,
          "value": "{{ $credentials.googleSheets.spreadsheetId }}",
          "mode": "id"
        },
        "sheetName": "Booking_Confirmations",
        "options": {}
      },
      "id": "16-read-completed-bookings",
      "name": "Read Completed Bookings",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        380,
        1200
      ]
    },
    {
      "parameters": {
        "jsCode": "const now = new Date();\nconst twoHoursAgo = new Date(now.getTime() - 2 * 60 * 60 * 1000);\n\nconst filteredBookings = items.filter(item => {\n  const bookingDateTime = new Date(`${item.json.booking_date}T${item.json.booking_time}`);\n  return (\n    (item.json.status === 'completed' || item.json.status === 'prezent') &&\n    bookingDateTime <= twoHoursAgo &&\n    !item.json.followup_sent\n  );\n});\n\nreturn filteredBookings;"
      },
      "id": "17-filter-followup-needed",
      "name": "Filter Follow-up Needed",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        1200
      ]
    },
    {
      "parameters": {
        "url": "https://waba.360dialog.io/v1/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "D360-API-KEY",
              "value": "={{ $credentials.whatsapp360dialog.apiKey }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "to",
              "value": "={{ $json.phone }}"
            },
            {
              "name": "type",
              "value": "text"
            },
            {
              "name": "text",
              "value": "{\"body\": \"Ne bucurăm că ai venit! Ne lași un review? https://g.page/r/[GOOGLE_MAPS_LINK]/review\"}"
            }
          ]
        },
        "options": {}
      },
      "id": "18-whatsapp-review-request",
      "name": "WhatsApp Review Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        780,
        1150
      ]
    },
    {
      "parameters": {
        "fromEmail": "noreply@magichub.ro",
        "toEmail": "={{ $json.email }}",
        "subject": "Mulțumim pentru vizită - Magic Hub",
        "emailFormat": "html",
        "message": "<!DOCTYPE html><html><body><h2>Mulțumim!</h2><p>Ne bucurăm că ai venit la Magic Hub!</p><p>Ne-ar face plăcere să ne lași un review:</p><a href=\"https://g.page/r/[GOOGLE_MAPS_LINK]/review\" target=\"_blank\">Lasă un review aici</a></body></html>"
      },
      "id": "19-email-review-request",
      "name": "Email Review Request",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2,
      "position": [
        780,
        1250
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "{{ $credentials.googleSheets.spreadsheetId }}",
          "mode": "id"
        },
        "sheetName": "Recenzii_Trimise",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "client_name": "={{ $json.name }}",
            "phone": "={{ $json.phone }}",
            "email": "={{ $json.email }}",
            "whatsapp_sent": "=true",
            "email_sent": "=true",
            "timestamp": "={{ new Date().toISOString() }}",
            "booking_date": "={{ $json.booking_date }}"
          }
        },
        "options": {}
      },
      "id": "20-log-review-requests",
      "name": "Log Review Requests",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        980,
        1200
      ]
    },
    {
      "parameters": {
        "path": "no-show-webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "21-webhook-no-show",
      "name": "Webhook - No Show",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        180,
        1500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.status }}",
              "rightValue": "no show",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "leftValue": "={{ $json.status }}",
              "rightValue": "absent",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        }
      },
      "id": "22-filter-no-show",
      "name": "Filter No Show",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        380,
        1500
      ]
    },
    {
      "parameters": {
        "url": "https://waba.360dialog.io/v1/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "D360-API-KEY",
              "value": "={{ $credentials.whatsapp360dialog.apiKey }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "to",
              "value": "={{ $json.phone }}"
            },
            {
              "name": "type",
              "value": "text"
            },
            {
              "name": "text",
              "value": "{\"body\": \"Am văzut că nu ai ajuns 😔 Te reprogramăm cu prioritate?\"}"
            }
          ]
        },
        "options": {}
      },
      "id": "23-whatsapp-no-show",
      "name": "WhatsApp No Show",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        580,
        1450
      ]
    },
    {
      "parameters": {
        "accountSid": "={{ $credentials.twilio.accountSid }}",
        "authToken": "={{ $credentials.twilio.authToken }}",
        "fromPhoneNumber": "+[YOUR_TWILIO_NUMBER]",
        "toPhoneNumber": "={{ $json.phone }}",
        "message": "Am văzut că nu ai ajuns. Te reprogramăm cu prioritate? Răspunde cu DA/NU"
      },
      "id": "24-sms-fallback-no-show",
      "name": "SMS Fallback - No Show",
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        580,
        1550
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "{{ $credentials.googleSheets.spreadsheetId }}",
          "mode": "id"
        },
        "sheetName": "No_Show",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "client_name": "={{ $json.firstname }} {{ $json.lastname }}",
            "phone": "={{ $json.phone }}",
            "booking_date": "={{ $json.date }}",
            "booking_time": "={{ $json.time }}",
            "location": "={{ $json.location }}",
            "whatsapp_sent": "=true",
            "sms_sent": "=true",
            "timestamp": "={{ new Date().toISOString() }}",
            "follow_up_needed": "=true"
          }
        },
        "options": {}
      },
      "id": "25-log-no-show",
      "name": "Log No Show",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        780,
        1500
      ]
    },
    {
      "parameters": {
        "path": "feedback-upload",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "26-webhook-feedback-upload",
      "name": "Webhook - Feedback Upload",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        180,
        1800
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ parseInt($json.rating) }}",
              "rightValue": 3,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ]
        }
      },
      "id": "27-filter-negative-feedback",
      "name": "Filter Negative Feedback",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        380,
        1800
      ]
    },
    {
      "parameters": {
        "model": "gpt-4",
        "messages": {
          "values": [
            {
              "content": "Generate a personalized reconnection message for a client who left negative feedback. Client: {{ $json.client_name }}, Rating: {{ $json.rating }}, Feedback: {{ $json.feedback }}. Create a sincere, professional message to rebuild trust."
            }
          ]
        },
        "options": {}
      },
      "id": "28-ai-reconnection-message",
      "name": "AI Reconnection Message",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [
        580,
        1800
      ]
    },
    {
      "parameters": {
        "fromEmail": "noreply@magichub.ro",
        "toEmail": "manager@magichub.ro",
        "subject": "Feedback Negativ - Acțiune Necesară",
        "emailFormat": "html",
        "message": "<!DOCTYPE html><html><body><h2>Feedback Negativ Detectat</h2><p><strong>Client:</strong> {{ $json.client_name }}</p><p><strong>Rating:</strong> {{ $json.rating }}/5</p><p><strong>Feedback:</strong> {{ $json.feedback }}</p><h3>Mesaj Generat AI:</h3><p>{{ $json.ai_message }}</p></body></html>"
      },
      "id": "29-email-manager-negative",
      "name": "Email Manager - Negative",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2,
      "position": [
        780,
        1750
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "{{ $credentials.googleSheets.spreadsheetId }}",
          "mode": "id"
        },
        "sheetName": "Feedback_Repair",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "client_name": "={{ $json.client_name }}",
            "rating": "={{ $json.rating }}",
            "feedback": "={{ $json.feedback }}",
            "ai_message": "={{ $json.ai_message }}",
            "manager_notified": "=true",
            "timestamp": "={{ new Date().toISOString() }}",
            "status": "pending_action"
          }
        },
        "options": {}
      },
      "id": "30-log-negative-feedback",
      "name": "Log Negative Feedback",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        780,
        1850
      ]
    },
    {
      "parameters": {
        "path": "google-review-webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "31-webhook-google-review",
      "name": "Webhook - Google Review",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        180,
        2100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ parseInt($json.rating) }}",
              "rightValue": 4,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ]
        }
      },
      "id": "32-switch-review-rating",
      "name": "Switch Review Rating",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        380,
        2100
      ]
    },
    {
      "parameters": {
        "model": "gpt-4",
        "messages": {
          "values": [
            {
              "content": "Generate a professional, warm thank you response to this positive Google review. Keep it under 150 characters. Review: {{ $json.review_text }}, Rating: {{ $json.rating }}/5"
            }
          ]
        },
        "options": {}
      },
      "id": "33-ai-positive-review-response",
      "name": "AI Positive Review Response",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [
        580,
        2050
      ]
    },
    {
      "parameters": {
        "url": "https://mybusiness.googleapis.com/v4/accounts/{{ $credentials.googleBusiness.accountId }}/locations/{{ $json.location_id }}/reviews/{{ $json.review_id }}/reply",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.googleBusiness.accessToken }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "comment",
              "value": "={{ $json.ai_response }}"
            }
          ]
        },
        "options": {}
      },
      "id": "34-post-auto-reply",
      "name": "Post Auto Reply",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        780,
        2050
      ]
    },
    {
      "parameters": {
        "model": "gpt-4",
        "messages": {
          "values": [
            {
              "content": "Generate a professional response draft for this negative Google review. Make it apologetic, solution-oriented, and invite private conversation. Review: {{ $json.review_text }}, Rating: {{ $json.rating }}/5"
            }
          ]
        },
        "options": {}
      },
      "id": "35-ai-negative-review-draft",
      "name": "AI Negative Review Draft",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [
        580,
        2150
      ]
    },
    {
      "parameters": {
        "url": "https://waba.360dialog.io/v1/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "D360-API-KEY",
              "value": "={{ $credentials.whatsapp360dialog.apiKey }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "to",
              "value": "{{ $credentials.manager.whatsappNumber }}"
            },
            {
              "name": "type",
              "value": "text"
            },
            {
              "name": "text",
              "value": "{\"body\": \"🚨 Review Negativ Google!\n\nRating: {{ $json.rating }}/5\nReview: {{ $json.review_text }}\n\nDraft răspuns AI:\n{{ $json.ai_draft }}\n\nAprobi? Răspunde DA/NU\"}"
            }
          ]
        },
        "options": {}
      },
      "id": "36-manager-approval-request",
      "name": "Manager Approval Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        780,
        2150
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "{{ $credentials.googleSheets.spreadsheetId }}",
          "mode": "id"
        },
        "sheetName": "Dashboard_Actions",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "action_type": "={{ $json.action_type }}",
            "client_name": "={{ $json.client_name }}",
            "phone": "={{ $json.phone }}",
            "email": "={{ $json.email }}",
            "channel": "={{ $json.channel }}",
            "status": "={{ $json.status }}",
            "location": "={{ $json.location }}",
            "timestamp": "={{ new Date().toISOString() }}",
            "confirmed": "={{ $json.confirmed || 'pending' }}",
            "details": "={{ JSON.stringify($json.details || {}) }}"
          }
        },
        "options": {}
      },
      "id": "37-universal-logger",
      "name": "Universal Logger",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        980,
        1600
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"status\": \"success\",\n  \"message\": \"Workflow completed successfully\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\",\n  \"action\": \"{{ $json.action_type || 'unknown' }}\"\n}"
      },
      "id": "38-response-node",
      "name": "Response Node",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1180,
        1600
      ]
    },
    {
      "parameters": {
        "errorMessage": "=Workflow Error: {{ $json.error || 'Unknown error occurred' }}",
        "options": {}
      },
      "id": "39-error-handler",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1180,
        1800
      ]
    }
  ],
  "connections": {
    "Webhook - Booking Upload": {
      "main": [
        [
          {
            "node": "Filter New Bookings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter New Bookings": {
      "main": [
        [
          {
            "node": "WhatsApp Confirmation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Email Confirmation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WhatsApp Confirmation": {
      "main": [
        [
          {
            "node": "Log Confirmations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Confirmation": {
      "main": [
        [
          {
            "node": "Log Confirmations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Confirmations": {
      "main": [
        [
          {
            "node": "Universal Logger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cron - Daily Reminders": {
      "main": [
        [
          {
            "node": "Read Bookings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Bookings": {
      "main": [
        [
          {
            "node": "Filter Tomorrow Bookings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Tomorrow Bookings": {
      "main": [
        [
          {
            "node": "WhatsApp Reminder",
            "type": "main",
            "index": 0
          },
          {
            "node": "Email Reminder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WhatsApp Reminder": {
      "main": [
        [
          {
            "node": "Universal Logger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Reminder": {
      "main": [
        [
          {
            "node": "Universal Logger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook - WhatsApp Messages": {
      "main": [
        [
          {
            "node": "AI Message Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Message Analysis": {
      "main": [
        [
          {
            "node": "AI WhatsApp Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI WhatsApp Response": {
      "main": [
        [
          {
            "node": "Log AI Interactions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log AI Interactions": {
      "main": [
        [
          {
            "node": "Universal Logger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cron - Follow-up Check": {
      "main": [
        [
          {
            "node": "Read Completed Bookings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Completed Bookings": {
      "main": [
        [
          {
            "node": "Filter Follow-up Needed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Follow-up Needed": {
      "main": [
        [
          {
            "node": "WhatsApp Review Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "Email Review Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WhatsApp Review Request": {
      "main": [
        [
          {
            "node": "Log Review Requests",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Review Request": {
      "main": [
        [
          {
            "node": "Log Review Requests",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Review Requests": {
      "main": [
        [
          {
            "node": "Universal Logger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook - No Show": {
      "main": [
        [
          {
            "node": "Filter No Show",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter No Show": {
      "main": [
        [
          {
            "node": "WhatsApp No Show",
            "type": "main",
            "index": 0
          },
          {
            "node": "SMS Fallback - No Show",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WhatsApp No Show": {
      "main": [
        [
          {
            "node": "Log No Show",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SMS Fallback - No Show": {
      "main": [
        [
          {
            "node": "Log No Show",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log No Show": {
      "main": [
        [
          {
            "node": "Universal Logger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook - Feedback Upload": {
      "main": [
        [
          {
            "node": "Filter Negative Feedback",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Negative Feedback": {
      "main": [
        [
          {
            "node": "AI Reconnection Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Reconnection Message": {
      "main": [
        [
          {
            "node": "Email Manager - Negative",
            "type": "main",
            "index": 0
          },
          {
            "node": "Log Negative Feedback",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Manager - Negative": {
      "main": [
        [
          {
            "node": "Universal Logger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Negative Feedback": {
      "main": [
        [
          {
            "node": "Universal Logger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook - Google Review": {
      "main": [
        [
          {
            "node": "Switch Review Rating",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Review Rating": {
      "main": [
        [
          {
            "node": "AI Positive Review Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Negative Review Draft",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Positive Review Response": {
      "main": [
        [
          {
            "node": "Post Auto Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post Auto Reply": {
      "main": [
        [
          {
            "node": "Universal Logger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Negative Review Draft": {
      "main": [
        [
          {
            "node": "Manager Approval Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manager Approval Request": {
      "main": [
        [
          {
            "node": "Universal Logger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Universal Logger": {
      "main": [
        [
          {
            "node": "Response Node",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 8,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1.0.0"
}